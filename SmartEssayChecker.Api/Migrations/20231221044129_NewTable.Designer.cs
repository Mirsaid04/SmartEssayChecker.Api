// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartEssayChecker.Api.Brokers.Storages;

#nullable disable

namespace SmartEssayChecker.Api.Migrations
{
    [DbContext(typeof(StorageBroker))]
    [Migration("20231221044129_NewTable")]
    partial class NewTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartEssayChecker.Api.Models.Essays.Essay", b =>
                {
                    b.Property<Guid>("EssayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EssayId");

                    b.HasIndex("UserId");

                    b.ToTable("Essays");
                });

            modelBuilder.Entity("SmartEssayChecker.Api.Models.Feedbacks.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EssayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Mark")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EssayId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("SmartEssayChecker.Api.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartEssayChecker.Api.Models.Essays.Essay", b =>
                {
                    b.HasOne("SmartEssayChecker.Api.Models.Users.User", "User")
                        .WithMany("Essays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartEssayChecker.Api.Models.Feedbacks.Feedback", b =>
                {
                    b.HasOne("SmartEssayChecker.Api.Models.Essays.Essay", "Essay")
                        .WithMany("Feedbacks")
                        .HasForeignKey("EssayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Essay");
                });

            modelBuilder.Entity("SmartEssayChecker.Api.Models.Essays.Essay", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("SmartEssayChecker.Api.Models.Users.User", b =>
                {
                    b.Navigation("Essays");
                });
#pragma warning restore 612, 618
        }
    }
}
